
import * as functions from 'firebase-functions';
import * as admin from 'firebase-admin';
import { type Order, type User } from './types';
// To send emails, you would typically use a service like SendGrid, Mailgun, etc.
// For this example, we'll log to the console, but the structure is here.
// import * as sendgrid from '@sendgrid/mail';
// sendgrid.setApiKey(functions.config().sendgrid.key);

const db = admin.firestore();

export const onOrderCreatedSendEmail = functions.region('us-central1').firestore
    .document('orders/{orderId}')
    .onCreate(async (snap, context) => {
        const order = snap.data() as Order;

        try {
            // Get seller's and buyer's user data to find their emails
            const sellerDoc = await db.collection('users').doc(order.sellerUid).get();
            const buyerDoc = await db.collection('users').doc(order.buyerUid).get();

            if (!sellerDoc.exists || !buyerDoc.exists) {
                console.error(`Could not find user data for seller ${order.sellerUid} or buyer ${order.buyerUid}`);
                return;
            }

            const seller = sellerDoc.data() as User;
            const buyer = buyerDoc.data() as User;
            
            // --- Email to Seller ---
            const sellerEmail = {
                to: seller.email,
                from: 'no-reply@reefua.com', // Use a verified sender email
                subject: `üéâ –ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #${order.id.substring(0, 6)} –Ω–∞ ReefUA!`,
                html: `
                    <h1>–í—ñ—Ç–∞—î–º–æ, ${seller.username}!</h1>
                    <p>–í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥ –ø–æ–∫—É–ø—Ü—è ${buyer.username}.</p>
                    <p><strong>–°—É–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</strong> ${order.totalAmount.toFixed(2)} –≥—Ä–Ω</p>
                    <p>–ë—É–¥—å –ª–∞—Å–∫–∞, —É–≤—ñ–π–¥—ñ—Ç—å —É —Å–≤–æ—é <a href="https://your-app-url/dashboard/sales/${order.id}">–ø–∞–Ω–µ–ª—å –∫–µ—Ä—É–≤–∞–Ω–Ω—è</a>, —â–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ç–∞ –æ–±—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.</p>
                    <p>–î—è–∫—É—î–º–æ –∑–∞ –ø—Ä–æ–¥–∞–∂ –Ω–∞ ReefUA!</p>
                `,
            };

            // --- Email to Buyer ---
            const buyerEmail = {
                 to: buyer.email,
                from: 'no-reply@reefua.com',
                subject: `‚úÖ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #${order.id.substring(0, 6)} –Ω–∞ ReefUA –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!`,
                html: `
                    <h1>–î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É, ${buyer.username}!</h1>
                    <p>–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, —â–æ –º—ñ—Å—Ç–∏—Ç—å –ª–æ—Ç–∏ –≤—ñ–¥ –ø—Ä–æ–¥–∞–≤—Ü—è ${seller.username}, –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ.</p>
                    <p><strong>–°—É–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:</strong> ${order.totalAmount.toFixed(2)} –≥—Ä–Ω</p>
                    <p>–ü—Ä–æ–¥–∞–≤–µ—Ü—å –æ—Ç—Ä–∏–º–∞–≤ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —ñ –Ω–µ–∑–∞–±–∞—Ä–æ–º –æ–±—Ä–æ–±–∏—Ç—å –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –í–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –π–æ–≥–æ —Å—Ç–∞—Ç—É—Å —É <a href="https://your-app-url/profile">–≤–∞—à–æ–º—É –ø—Ä–æ—Ñ—ñ–ª—ñ</a>.</p>
                `,
            };

            // In a real app, you would uncomment the following lines after setting up an email service
            // await sendgrid.send(sellerEmail);
            // await sendgrid.send(buyerEmail);

            // Using console.log to satisfy the linter until a real email service is used.
            console.log(`(Email-simulation) Prepared notification for seller:`, JSON.stringify(sellerEmail));
            console.log(`(Email-simulation) Prepared notification for buyer:`, JSON.stringify(buyerEmail));

        } catch (error) {
            console.error(`Failed to send notification emails for order ${order.id}`, error);
        }
    });
