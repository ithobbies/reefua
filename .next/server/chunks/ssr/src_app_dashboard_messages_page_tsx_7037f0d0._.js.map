{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/messages/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '@/context/auth-context';\nimport { useChat } from '@/context/chat-context';\nimport { db } from '@/lib/firebase';\nimport { collection, query, where, orderBy, onSnapshot } from 'firebase/firestore';\nimport type { Chat } from '@/functions/src/types';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { Loader2, MessageSquare } from 'lucide-react';\nimport Image from 'next/image';\n\nexport default function DashboardMessagesPage() {\n  const { user } = useAuth();\n  const { openChatFromList } = useChat();\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    document.title = 'Мої Повідомлення - Панель Продавця';\n    if (!user) {\n      setLoading(false);\n      return;\n    }\n\n    setLoading(true);\n    const chatsQuery = query(\n      collection(db, 'chats'),\n      where('participantUids', 'array-contains', user.uid),\n      orderBy('updatedAt', 'desc')\n    );\n\n    const unsubscribe = onSnapshot(chatsQuery, (snapshot) => {\n      const fetchedChats = snapshot.docs.map(doc => doc.data() as Chat);\n      setChats(fetchedChats);\n      setLoading(false);\n    }, (error) => {\n      console.error(\"Error fetching chats: \", error);\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, [user]);\n\n  const handleOpenChat = (chat: Chat) => {\n    const otherUid = chat.participantUids.find(uid => uid !== user?.uid);\n    if (!otherUid || !chat.participantInfo[otherUid]) return;\n    \n    openChatFromList(chat);\n  };\n\n  if (loading) {\n    return <div className=\"flex justify-center items-center py-10\"><Loader2 className=\"h-8 w-8 animate-spin text-primary\" /></div>;\n  }\n\n  return (\n    <div className=\"space-y-6\">\n       <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-headline font-semibold text-primary\">Мої Повідомлення</h1>\n      </div>\n      <Card>\n        <CardHeader>\n          <CardTitle>Список діалогів</CardTitle>\n          <CardDescription>Всі ваші розмови з покупцями та продавцями.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {chats.length > 0 ? (\n            <div className=\"space-y-4\">\n              {chats.map(chat => {\n                const otherUid = chat.participantUids.find(uid => uid !== user?.uid)!;\n                const otherUserInfo = chat.participantInfo[otherUid];\n                const lastMessageText = chat.lastMessage?.text ? \n                    (chat.lastMessage.senderUid === user?.uid ? \"Ви: \" : \"\") + chat.lastMessage.text :\n                    \"Діалог почато\";\n\n                return (\n                  <div \n                    key={chat.id}\n                    className=\"flex items-center gap-4 p-3 rounded-lg hover:bg-secondary cursor-pointer transition-colors\"\n                    onClick={() => handleOpenChat(chat)}\n                  >\n                    <Avatar className=\"h-12 w-12\">\n                      <AvatarImage src={otherUserInfo?.photoURL || undefined} alt={otherUserInfo?.username} />\n                      <AvatarFallback>{otherUserInfo?.username?.substring(0, 2).toUpperCase()}</AvatarFallback>\n                    </Avatar>\n                    <div className=\"flex-grow overflow-hidden\">\n                      <div className=\"flex justify-between items-center\">\n                        <p className=\"font-semibold truncate\">{otherUserInfo?.username}</p>\n                        <p className=\"text-xs text-muted-foreground flex-shrink-0\">\n                          {chat.updatedAt && new Date(chat.updatedAt).toLocaleDateString('uk-UA')}\n                        </p>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground truncate\">{chat.lotName}</p>\n                      <p className=\"text-sm text-muted-foreground truncate\">{lastMessageText}</p>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          ) : (\n            <div className=\"text-center py-16\">\n              <MessageSquare className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n              <h3 className=\"mt-4 text-lg font-semibold\">У вас ще немає діалогів</h3>\n              <p className=\"mt-2 text-sm text-muted-foreground\">Почніть розмову зі сторінки лота, щоб вона з'явилась тут.</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}