{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/countdown-badge.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Badge } from '@/components/ui/badge';\nimport { TimerIcon } from 'lucide-react';\n\ninterface CountdownBadgeProps {\n  endTime: Date;\n}\n\nconst CountdownBadge: React.FC<CountdownBadgeProps> = ({ endTime }) => {\n  const [timeLeft, setTimeLeft] = useState('');\n  const [isEndingSoon, setIsEndingSoon] = useState(false);\n  const [isCritical, setIsCritical] = useState(false);\n\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const difference = +new Date(endTime) - +new Date();\n      let newTimeLeft = '';\n      let endingSoon = false;\n      let critical = false;\n\n      if (difference > 0) {\n        const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((difference / (1000 * 60 * 60)) % 24);\n        const minutes = Math.floor((difference / 1000 / 60) % 60);\n        const seconds = Math.floor((difference / 1000) % 60);\n        \n        if (days > 0) {\n          newTimeLeft = `${days}д ${hours}г ${minutes}хв`;\n        } else if (hours > 0) {\n          newTimeLeft = `${hours}г ${minutes}хв ${seconds}с`;\n        } else if (minutes > 0) {\n          newTimeLeft = `${minutes}хв ${seconds}с`;\n          endingSoon = true;\n        } else {\n          newTimeLeft = `${seconds}с`;\n          endingSoon = true;\n          critical = true;\n        }\n      } else {\n        newTimeLeft = 'Аукціон завершено';\n      }\n      setTimeLeft(newTimeLeft);\n      setIsEndingSoon(endingSoon);\n      setIsCritical(critical);\n    };\n\n    calculateTimeLeft(); // Initial call\n    const timer = setInterval(calculateTimeLeft, 1000);\n\n    return () => clearInterval(timer);\n  }, [endTime]);\n\n  let badgeVariant: \"default\" | \"secondary\" | \"destructive\" | \"outline\" = \"secondary\";\n  let animationClass = \"\";\n\n  if (timeLeft === 'Аукціон завершено') {\n    badgeVariant = \"destructive\";\n  } else if (isCritical) {\n    badgeVariant = \"destructive\";\n    animationClass = \"animate-pulse-lighter\";\n  } else if (isEndingSoon) {\n    badgeVariant = \"default\"; // Default is primary color based on theme, which is blue. Use accent instead for warning.\n                               // We can use default shadcn variants. For CoralOrange as accent, this needs a custom class or explicit style.\n                               // Let's use default for now for visual effect.\n                               // If accent is desired: style={{ backgroundColor: 'hsl(var(--accent))', color: 'hsl(var(--accent-foreground))' }}\n    animationClass = \"animate-pulse\"; // Tailwind's default pulse\n  }\n\n\n  return (\n    <Badge variant={badgeVariant} className={`w-full justify-center py-2 text-sm ${animationClass}`}>\n      <TimerIcon className=\"mr-2 h-4 w-4\" />\n      {timeLeft}\n    </Badge>\n  );\n};\n\nexport default CountdownBadge;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAUA,MAAM,iBAAgD,CAAC,EAAE,OAAO,EAAE;;IAChE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,MAAM;8DAAoB;oBACxB,MAAM,aAAa,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI;oBAC7C,IAAI,cAAc;oBAClB,IAAI,aAAa;oBACjB,IAAI,WAAW;oBAEf,IAAI,aAAa,GAAG;wBAClB,MAAM,OAAO,KAAK,KAAK,CAAC,aAAa,CAAC,OAAO,KAAK,KAAK,EAAE;wBACzD,MAAM,QAAQ,KAAK,KAAK,CAAC,AAAC,aAAa,CAAC,OAAO,KAAK,EAAE,IAAK;wBAC3D,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,aAAa,OAAO,KAAM;wBACtD,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,aAAa,OAAQ;wBAEjD,IAAI,OAAO,GAAG;4BACZ,cAAc,GAAG,KAAK,EAAE,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,CAAC;wBACjD,OAAO,IAAI,QAAQ,GAAG;4BACpB,cAAc,GAAG,MAAM,EAAE,EAAE,QAAQ,GAAG,EAAE,QAAQ,CAAC,CAAC;wBACpD,OAAO,IAAI,UAAU,GAAG;4BACtB,cAAc,GAAG,QAAQ,GAAG,EAAE,QAAQ,CAAC,CAAC;4BACxC,aAAa;wBACf,OAAO;4BACL,cAAc,GAAG,QAAQ,CAAC,CAAC;4BAC3B,aAAa;4BACb,WAAW;wBACb;oBACF,OAAO;wBACL,cAAc;oBAChB;oBACA,YAAY;oBACZ,gBAAgB;oBAChB,cAAc;gBAChB;;YAEA,qBAAqB,eAAe;YACpC,MAAM,QAAQ,YAAY,mBAAmB;YAE7C;4CAAO,IAAM,cAAc;;QAC7B;mCAAG;QAAC;KAAQ;IAEZ,IAAI,eAAoE;IACxE,IAAI,iBAAiB;IAErB,IAAI,aAAa,qBAAqB;QACpC,eAAe;IACjB,OAAO,IAAI,YAAY;QACrB,eAAe;QACf,iBAAiB;IACnB,OAAO,IAAI,cAAc;QACvB,eAAe,WAAW,0FAA0F;QACzF,8GAA8G;QAC9G,+CAA+C;QAC/C,kHAAkH;QAC7I,iBAAiB,iBAAiB,2BAA2B;IAC/D;IAGA,qBACE,6LAAC,oIAAA,CAAA,QAAK;QAAC,SAAS;QAAc,WAAW,CAAC,mCAAmC,EAAE,gBAAgB;;0BAC7F,6LAAC,2MAAA,CAAA,YAAS;gBAAC,WAAU;;;;;;YACpB;;;;;;;AAGP;GAnEM;KAAA;uCAqES","debugId":null}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/lots/lot-card.tsx"],"sourcesContent":["'use client';\n\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport type { Lot } from '@/lib/mock-data';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tag } from 'lucide-react';\nimport CountdownBadge from '@/components/ui/countdown-badge';\n\ninterface LotCardProps {\n  lot: Lot;\n}\n\nconst LotCard: React.FC<LotCardProps> = ({ lot }) => {\n  return (\n    <Card className=\"overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300 ease-in-out hover:scale-[1.03] transform rounded-[12px] break-inside-avoid\">\n      <Link href={`/lot/${lot.id}`} aria-label={`Переглянути деталі лоту ${lot.name}`}>\n        <CardHeader className=\"p-0\">\n          <div className=\"aspect-[4/3] relative w-full\">\n            <Image\n              src={lot.imageUrl}\n              alt={lot.name}\n              fill\n              sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n              className=\"object-cover\"\n              data-ai-hint={lot.dataAiHint || \"coral\"}\n            />\n          </div>\n        </CardHeader>\n        <CardContent className=\"p-4\">\n          <CardTitle className=\"text-lg font-headline mb-2 truncate\" title={lot.name}>{lot.name}</CardTitle>\n          <div className=\"flex justify-between items-center mb-2\">\n            <p className=\"text-sm text-muted-foreground\">Поточна ставка:</p>\n            <p className=\"text-xl font-semibold text-primary\">{lot.currentBid} грн</p>\n          </div>\n          <CountdownBadge endTime={lot.endTime} />\n        </CardContent>\n      </Link>\n      <CardFooter className=\"p-4 pt-0\">\n        {lot.buyNowPrice && (\n          <Button variant=\"default\" className=\"w-full bg-accent hover:bg-accent/90 text-accent-foreground\">\n            <Tag className=\"mr-2 h-4 w-4\" /> Купити зараз за {lot.buyNowPrice} грн\n          </Button>\n        )}\n        {!lot.buyNowPrice && (\n           <Button variant=\"outline\" className=\"w-full\" asChild>\n            <Link href={`/lot/${lot.id}`}>Зробити ставку</Link>\n          </Button>\n        )}\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default LotCard;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AARA;;;;;;;;AAcA,MAAM,UAAkC,CAAC,EAAE,GAAG,EAAE;IAC9C,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,+JAAA,CAAA,UAAI;gBAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;gBAAE,cAAY,CAAC,wBAAwB,EAAE,IAAI,IAAI,EAAE;;kCAC7E,6LAAC,mIAAA,CAAA,aAAU;wBAAC,WAAU;kCACpB,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;gCACJ,KAAK,IAAI,QAAQ;gCACjB,KAAK,IAAI,IAAI;gCACb,IAAI;gCACJ,OAAM;gCACN,WAAU;gCACV,gBAAc,IAAI,UAAU,IAAI;;;;;;;;;;;;;;;;kCAItC,6LAAC,mIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,6LAAC,mIAAA,CAAA,YAAS;gCAAC,WAAU;gCAAsC,OAAO,IAAI,IAAI;0CAAG,IAAI,IAAI;;;;;;0CACrF,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;kDAAgC;;;;;;kDAC7C,6LAAC;wCAAE,WAAU;;4CAAsC,IAAI,UAAU;4CAAC;;;;;;;;;;;;;0CAEpE,6LAAC,iJAAA,CAAA,UAAc;gCAAC,SAAS,IAAI,OAAO;;;;;;;;;;;;;;;;;;0BAGxC,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;;oBACnB,IAAI,WAAW,kBACd,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAU,WAAU;;0CAClC,6LAAC,mMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;4BAAiB;4BAAkB,IAAI,WAAW;4BAAC;;;;;;;oBAGrE,CAAC,IAAI,WAAW,kBACd,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAU,WAAU;wBAAS,OAAO;kCACnD,cAAA,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;sCAAE;;;;;;;;;;;;;;;;;;;;;;;AAM1C;KAvCM;uCAyCS","debugId":null}}]
}